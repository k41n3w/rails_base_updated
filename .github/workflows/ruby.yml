name: Rails Tests

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  test:
    name: Rspec Test Action
    runs-on: ubuntu-latest

    # Esse serviço faz o download do banco e seta as variáveis de usuário e senha
    services:
      postgres:
        image: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: pguser
          POSTGRES_PASSWORD: postgres

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Ruby version specified in `.ruby-version`
      uses: eregon/use-ruby-action@master

    # Faz um cache da suas gems pra não ficar precisando instalar tudo de novo sempre que roda o pipeline
    - name: Gem cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Build App
      env:
        DB_HOST: localhost
        RAILS_ENV: test
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        bin/rails db:create db:migrate

    - name: Run Tests
      env:
        RAILS_ENV: test
        DB_HOST: localhost
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: bundle exec rspec
